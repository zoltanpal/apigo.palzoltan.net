name: Deploy API to Server

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Deploy to the Server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            ENV=${{ github.event.inputs.environment }}

            # navigate to the work directory
            if [ "$ENV" == "prod" ]; then
              echo "Deploying to production..."
              WORK_DIR=${{ secrets.PROD_SERVER_DEPLOYMENT_PATH }}
              cd ${{ secrets.PROD_SERVER_DEPLOYMENT_PATH }}
              git config --global --add safe.directory ${{ secrets.PROD_SERVER_DEPLOYMENT_PATH }}
            else
              echo "Deploying to development..."
              WORK_DIR=${{ secrets.DEV_SERVER_DEPLOYMENT_PATH }}
              cd ${{ secrets.DEV_SERVER_DEPLOYMENT_PATH }}
              git config --global --add safe.directory ${{ secrets.DEV_SERVER_DEPLOYMENT_PATH }}
            fi

            # Clone repo if missing
            if [ ! -d ".git" ]; then
              git clone https://github.com/zoltanpal/apigo.palzoltan.net.git .
              git checkout ${{ github.ref_name }}
            fi

            # Fetch latest changes
            git fetch origin

            # Hard reset to match the latest remote state
            git reset --hard origin/${{ github.ref_name }}
            git clean -fd  # Remove untracked files
            git checkout ${{ github.ref_name }}

            if [ "$ENV" == "prod" ]; then
              echo "Starting the production API service ..."
              sudo systemctl restart apigo.palzoltan.net.service
              sudo systemctl status apigo.palzoltan.net.service
            else
              echo "Starting the development API service ..."
              sudo systemctl restart devapigo.palzoltan.net.service
              sudo systemctl status devapigo.palzoltan.net.service
            fi