name: Deploy API to Server

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ENVIRONMENT: ${{ github.event.inputs.environment }}
      GO_VERSION: '1.23.x'
      BINARY_NAME: golang-restapi
      WORK_DIR: ${{ github.event.inputs.environment == 'prod' && secrets.PROD_SERVER_DEPLOYMENT_PATH || secrets.DEV_SERVER_DEPLOYMENT_PATH }}
      SVC: ${{ github.event.inputs.environment == 'prod' && 'apigo.palzoltan.net.service' || 'devapigo.palzoltan.net.service' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build Linux Binary
        run: |
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 \
          go build -ldflags="-s -w" -o "$BINARY_NAME" .
      
      - name: Upload Binary to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "${{ env.BINARY_NAME }}"
          target: "${{ env.WORK_DIR }}"
      
      - name: Setup Permission & Owner
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd "${{ env.WORK_DIR }}"
            chmod 755 "${{ env.BINARY_NAME }}"
            chown www-data:www-data "${{ env.BINARY_NAME }}"

      - name: Restart Service
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            sudo systemctl restart "${{ env.SVC }}"
            sudo systemctl status "${{ env.SVC }}" --no-pager -l